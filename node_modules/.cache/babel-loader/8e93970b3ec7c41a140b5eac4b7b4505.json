{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\antag\\\\MyReads-master\\\\MyReads-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\antag\\\\MyReads-master\\\\MyReads-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\antag\\\\MyReads-master\\\\MyReads-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\antag\\\\MyReads-master\\\\MyReads-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\antag\\\\MyReads-master\\\\MyReads-master\\\\src\\\\Views\\\\Search.js\";\n\nimport CloseSearchIcon from \"../Components/CloseSearchIcon\";\nimport React, { useState } from \"react\";\nimport Book from \"../Components/Book\";\nimport { search } from \"../BooksAPI\";\nimport { getAll } from \"../BooksAPI\";\nimport { useEffect } from \"react\";\n\nvar SearchPage = function SearchPage(_ref) {\n  var updateBookShelf = _ref.updateBookShelf;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      searchTerm = _useState2[0],\n      setSearchTerm = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      searchedBooks = _useState4[0],\n      setSearchedBooks = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      shelfBooks = _useState6[0],\n      setShelfBooks = _useState6[1];\n\n  useEffect(function () {\n    function getAllBooks() {\n      return _getAllBooks.apply(this, arguments);\n    }\n\n    function _getAllBooks() {\n      _getAllBooks = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var books;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return getAll();\n\n              case 2:\n                books = _context.sent;\n                setShelfBooks(books);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _getAllBooks.apply(this, arguments);\n    }\n\n    getAllBooks();\n  }, []);\n\n  var onSearchChange = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event) {\n      var query, results;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              query = event.target.value;\n              setSearchTerm(query);\n\n              if (!query.trim()) {\n                _context2.next = 9;\n                break;\n              }\n\n              _context2.next = 5;\n              return search(searchTerm);\n\n            case 5:\n              results = _context2.sent;\n\n              if (!Array.isArray(results)) {\n                setSearchedBooks([]);\n              } else {\n                setSearchedBooks(results);\n              }\n\n              _context2.next = 10;\n              break;\n\n            case 9:\n              setSearchedBooks([]);\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function onSearchChange(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-books\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-books-bar\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CloseSearchIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-books-input-wrapper\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Search by title or author\",\n    onChange: function onChange(event) {\n      return onSearchChange(event);\n    },\n    value: searchTerm || \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-books-results\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"ol\", {\n    className: \"books-grid\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, searchedBooks && searchedBooks.map(function (searchedBook) {\n    var existingBook = shelfBooks.find(function (book) {\n      return book.id === searchedBook.id;\n    });\n    if (existingBook) searchedBook.shelf = existingBook.shelf;\n    return /*#__PURE__*/React.createElement(Book, {\n      key: searchedBook.id,\n      book: _objectSpread({}, searchedBook),\n      updateBookShelf: updateBookShelf,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    });\n  }))));\n};\n\nexport default SearchPage;","map":{"version":3,"sources":["C:/Users/antag/MyReads-master/MyReads-master/src/Views/Search.js"],"names":["CloseSearchIcon","React","useState","Book","search","getAll","useEffect","SearchPage","updateBookShelf","searchTerm","setSearchTerm","searchedBooks","setSearchedBooks","shelfBooks","setShelfBooks","getAllBooks","books","onSearchChange","event","query","target","value","trim","results","Array","isArray","map","searchedBook","existingBook","find","book","id","shelf"],"mappings":"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","sourcesContent":["import CloseSearchIcon from \"../Components/CloseSearchIcon\";\nimport React, { useState } from \"react\";\nimport Book from \"../Components/Book\";\nimport { search } from \"../BooksAPI\";\nimport { getAll } from \"../BooksAPI\";\nimport { useEffect } from \"react\";\n\nconst SearchPage = ({ updateBookShelf }) => {\n  const [searchTerm, setSearchTerm] = useState();\n  const [searchedBooks, setSearchedBooks] = useState();\n  const [shelfBooks, setShelfBooks] = useState([]);\n\n  useEffect(() => {\n    async function getAllBooks() {\n      const books = await getAll();\n      setShelfBooks(books);\n    }\n    getAllBooks();\n  }, []);\n\n  const onSearchChange = async (event) => {\n    const query = event.target.value;\n    setSearchTerm(query);\n    if (query.trim()) {\n      const results = await search(searchTerm);\n      if (!Array.isArray(results)) {\n        setSearchedBooks([]);\n      } else {\n        setSearchedBooks(results);\n      }\n    } else {\n      setSearchedBooks([]);\n    }\n  };\n  return (\n    <div className=\"search-books\">\n      <div className=\"search-books-bar\">\n        <CloseSearchIcon />\n        <div className=\"search-books-input-wrapper\">\n          <input\n            type=\"text\"\n            placeholder=\"Search by title or author\"\n            onChange={(event) => onSearchChange(event)}\n            value={searchTerm || \"\"}\n          />\n        </div>\n      </div>\n      <div className=\"search-books-results\">\n        <ol className=\"books-grid\">\n          {searchedBooks &&\n            searchedBooks.map((searchedBook) => {\n              const existingBook = shelfBooks.find(\n                (book) => book.id === searchedBook.id\n              );\n              if (existingBook) searchedBook.shelf = existingBook.shelf;\n              return (\n                <Book\n                  key={searchedBook.id}\n                  book={{ ...searchedBook }}\n                  updateBookShelf={updateBookShelf}\n                />\n              );\n            })}\n        </ol>\n      </div>\n    </div>\n  );\n};\n\nexport default SearchPage;\n"]},"metadata":{},"sourceType":"module"}